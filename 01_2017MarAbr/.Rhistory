print("O dia dos professores!!!")
print("Ou melhor no seu caso:")
print("Dia dos melhores professors de R :)")
print("Este daqui é o presente que eu fiz pra você em cima da hora")
print("Usando principalmente o comando print")
print("Que aprendi a usar na sua aula.")
print("Eu e a mamãe te amamos muito. :):):)")
print("ASS:Diogo:) e mamãe:) .")
plot(Feliz_dia_dos~Profesores_de_R_Papai)
plot(A_esquerda~Olhe_para_o_console)
plot(Feliz_dia_dos~Profesores_de_R_Papai)
g1 <- c(2,3,1)
g2 <- c(6,7,5)
m1 <- mean(g1); v1 <- sd(g1)^2
m2 <- mean(g2); v2 <- sd(g2)^2
g <- c(g1,g2)  # grupão
mg <- mean(g)  # média grupão
St <- sum((g-mg)^2)                    # soma dos quadrados total
Sw <- sum((g1-m1)^2) + sum((g2-m2)^2)  # soma dos quadrados dentro dos grupos
Sb <- St - Sw                          # soma dos quadrados ente grupos
# ou
Sb2 <- sum(((g1 - m1) - (g1 - mg))^2) + sum(((g2 - m2) - (g2 - mg))^2)
# ou
Sb3 <- length(g1)*(m1-mg)^2 + length(g2)*(m2-mg)^2
k <- 2 # quantidade de fatores ou grupos
n <- 6 # quantidade total de observações
glb <- k - 1     # graus de liberdade intergrupos
glw <- n - k     # graus de liberdade intragrupos
glt <- glb + glw # graus de liberdade total
MSefe <- Sb/glb #
MSerr <- Sw/glw
Fs <- MSefe / MSerr
p.value <- 1 - pf(Fs, glb, glw)
# teste t
t.test(g1, g2, paired=FALSE, var.equal = FALSE)
# usando aov
dados <- data.frame(grupo=c(1,1,1,2,2,2), obs=c(g1,g2))
boxplot(obs ~ grupo, data=dados)
res <- aov(obs ~ grupo, data=dados)
summary(res)
# início figura
local<-factor(rep(letters[1:2],each=3))
medidas<-g
boxplot(medidas~local,frame.plot=F,ylim=c(0,10),ylab="Medidas",xlab="Local")
plot(medidas,pch=as.character(local),col=as.numeric(local)+1,frame.plot=F, main="ANOVA", xlab="amostras")
abline(h=mean(medidas),lwd=2)
text(3.5,mean(medidas)+0.2,"Média Global")
medias<-aggregate(medidas,list(local),mean)
abline(h=medias[1,2],lwd=2,col=2)
text(3.5,medias[1,2]+0.2,"Média a",col=2)
abline(h=medias[2,2],lwd=2,col=3)
text(3.5,medias[2,2]+0.2,"Média b",col=3)
abline(h=mean(medidas),lwd=2)
text(25,mean(medidas)-0.2,"Média Geral")
segments(1:6, mean(medidas),1:6,medidas,lwd=3)
segments((1:6)+0.05, rep(medias[,2],each=3),(1:6)+0.05, medidas,lwd=3,
col=as.numeric(local)+1)
segments((1:6)+0.09, rep(c(m1,m2),each=3),(1:6)+0.09, rep(mg,each=6),lwd=3,
col="blue")
# fim figura
g1 <- rnorm(100,5,2)
g2 <- rnorm(100,5,2)
g3 <- rnorm(100,5,2)
m1 <- mean(g1); sd1 <- sd(g1)
m2 <- mean(g2); sd2 <- sd(g2)
m3 <- mean(g3); sd3 <- sd(g3)
g <- c(g1, g2, g3)
mg <- mean(g); sdg <- sd(g)
St <- sum((g-mg)^2)                    # soma dos quadrados total
Sw <- sum((g1-m1)^2) + sum((g2-m2)^2) +
sum((g3-m3)^2)                   # soma dos quadrados dentro dos grupos
Sb <- St - Sw                          # soma dos quadrados ente grupos
k <- 3 # quantidade de fatores ou grupos
n <- length(g) # quantidade total de observações
glb <- k - 1     # graus de liberdade intergrupos
glw <- n - k     # graus de liberdade intragrupos
glt <- glb + glw # graus de liberdade total
MSefe <- Sb/glb #
MSerr <- Sw/glw
Fs <- MSefe / MSerr
p.value <- 1 - pf(Fs, glb, glw)
p.value
r <- replicate(100,1:3)
r <- as.factor(c(r[1,],r[2,],r[3,]))
dados <- data.frame(g,r)
s <- summary(   lm(g ~ r, data=dados)  )
s
1 - pf(s$fstatistic[1], s$fstatistic[2], s$fstatistic[3])
boxplot(g ~ r, data=dados)
res <- aov(g ~ r, data=dados)
summary(res)
s
boxplot(g ~ r, data=dados)
? setseed
? seed
? seyt.seed
set.seed
? set.seed
set.seed(1456728)
g1 <- rnorm(100,5,2)
g2 <- rnorm(100,5,2)
g3 <- rnorm(100,5,2)
m1 <- mean(g1); sd1 <- sd(g1)
m2 <- mean(g2); sd2 <- sd(g2)
m3 <- mean(g3); sd3 <- sd(g3)
g <- c(g1, g2, g3)
mg <- mean(g); sdg <- sd(g)
St <- sum((g-mg)^2)                    # soma dos quadrados total
Sw <- sum((g1-m1)^2) + sum((g2-m2)^2) +
sum((g3-m3)^2)                   # soma dos quadrados dentro dos grupos
Sb <- St - Sw                          # soma dos quadrados ente grupos
k <- 3 # quantidade de fatores ou grupos
n <- length(g) # quantidade total de observações
glb <- k - 1     # graus de liberdade intergrupos
glw <- n - k     # graus de liberdade intragrupos
glt <- glb + glw # graus de liberdade total
MSefe <- Sb/glb #
MSerr <- Sw/glw
Fs <- MSefe / MSerr
Fs
p.value <- 1 - pf(Fs, glb, glw)
p.value
set.seed(1456728)
g1 <- rnorm(100,5,2)
g2 <- rnorm(100,5,2)
g3 <- rnorm(100,5,2)
m1 <- mean(g1); sd1 <- sd(g1)
m2 <- mean(g2); sd2 <- sd(g2)
m3 <- mean(g3); sd3 <- sd(g3)
g <- c(g1, g2, g3)
mg <- mean(g); sdg <- sd(g)
St <- sum((g-mg)^2)                    # soma dos quadrados total
Sw <- sum((g1-m1)^2) + sum((g2-m2)^2) +
sum((g3-m3)^2)                   # soma dos quadrados dentro dos grupos
Sb <- St - Sw                          # soma dos quadrados ente grupos
k <- 3 # quantidade de fatores ou grupos
n <- length(g) # quantidade total de observações
glb <- k - 1     # graus de liberdade intergrupos
glw <- n - k     # graus de liberdade intragrupos
glt <- glb + glw # graus de liberdade total
MSefe <- Sb/glb #
MSerr <- Sw/glw
Fs <- MSefe / MSerr
Fs
p.value <- 1 - pf(Fs, glb, glw)
p.value
url <-
"http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarProposicoes?sigla=PL&numero=&ano=2011&datApresentacaoIni=&datApresentacaoFim=&idTipoAutor=&parteNomeAutor=&siglaPartidoAutor=&siglaUFAutor=&generoAutor=&codEstado=&codOrgaoEstado=&emTramitacao="
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
library(XML)
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
xml_data <- xmlToList(data)
xml_data[[3]]
xml_data[[3]]$tipoProposicao
xml_data[[3]]$tipoProposicao$id
xml_data[[3]]$tipoProposicao$sigla
url <- "http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarSiglasTipoProposicao"
readlines <- readLines(url, warn = FALSE)
tipoProp <- xmlToDataFrame(readlines)
url <- "http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarSiglasTipoProposicao"
xml_data <- xmlToList(data)
TIPOLEI <- c(
'MPV', 'MSC', 'MSF', 'MSG', 'OF.', 'P.C', 'PDC', 'PDF',
'PDL', 'PDN', 'PDR', 'PDS', 'PEC', 'PL.', 'PLD', 'PLN',
'PLP', 'PRC', 'PRN', 'QOD', 'RCP', 'REC', 'REP', 'REQ',
'VET'
)
nrow(xml_data)
length(xml_data)
i = 3
xml_data[[i]]$id
xml_data[[i]]$nome
xml_data[[i]]$tipoProposicao$sigla
xml_data[[i]]$numero
i=1
xml_data[[i]]$numero
as.numeric(xml_data[[i]]$id)
as.numeric(xml_data[[i]]$numero)
xml_data[[i]]$ano
xml_data[[i]]$orgaoNumerador$nome
xml_data[[i]]$datApresentacao
xml_data[[i]]$txtEmenta
xml_data[[i]]$txtExplicacaoEmenta
xml_data[[i]]$regime$txtRegime
xml_data[[i]]$ultimoDespacho$txtDespacho
xml_data[[i]]$situacao$descricao
library(XML)
# tipo proposicoes
TIPOLEI <- c(
'MPV', 'MSC', 'MSF', 'MSG', 'OF.', 'P.C', 'PDC', 'PDF',
'PDL', 'PDN', 'PDR', 'PDS', 'PEC', 'PL.', 'PLD', 'PLN',
'PLP', 'PRC', 'PRN', 'QOD', 'RCP', 'REC', 'REP', 'REQ',
'VET'
)
baseProjetos <- NULL
library(XML)
# tipo proposicoes
TIPOLEI <- c(
'MPV', 'MSC', 'MSF', 'MSG', 'OF.', 'P.C', 'PDC', 'PDF',
'PDL', 'PDN', 'PDR', 'PDS', 'PEC', 'PL.', 'PLD', 'PLN',
'PLP', 'PRC', 'PRN', 'QOD', 'RCP', 'REC', 'REP', 'REQ',
'VET'
)
baseProjetos <- NULL
for(ano in 1989:2017)
for(tipo in TIPOLEI){
url <-  paste0("http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarProposicoes?",
"sigla=",tipo,"&numero=&ano=",ano,
"&datApresentacaoIni=&datApresentacaoFim=&idTipoAutor=&parteNomeAutor=",
"&siglaPartidoAutor=&siglaUFAutor=&generoAutor=&codEstado=&codOrgaoEstado=&emTramitacao=")
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
xml_data <- xmlToList(data)
xml_data[[3]]$tipoProposicao$sigla
for(i in 1:lenght(xml_data)){
df <- data.frame(
id=as.numeric(xml_data[[i]]$id),
nome=xml_data[[i]]$nome,
tipoProposicao=xml_data[[i]]$tipoProposicao$sigla,
numero=as.numeric(xml_data[[i]]$numero),
ano=xml_data[[i]]$ano,
orgaoNumerador=xml_data[[i]]$orgaoNumerador$nome,
datApresentacao=xml_data[[i]]$datApresentacao,
txtEmenta=xml_data[[i]]$txtEmenta,
txtExplicacaoEmenta=xml_data[[i]]$txtExplicacaoEmenta,
txtRegime=xml_data[[i]]$regime$txtRegime,
txtApreciacao=xml_data[[i]]$apreciacao$txtApreciacao,
qtdAutores=xml_data[[i]]$qtdAutores,
autor1=xml_data[[i]]$autor1$txtNomeAutor,
ultimoDespacho=xml_data[[i]]$ultimoDespacho$txtDespacho,
situacao=xml_data[[i]]$situacao$descricao,
proposicaoPrincipal=xml_data[[i]]$proposicao$nome
)
baseProjetos <- rbind(baseProjetos, df)
}
}
}
for(ano in 1989:2017){
for(tipo in TIPOLEI){
url <-  paste0("http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarProposicoes?",
"sigla=",tipo,"&numero=&ano=",ano,
"&datApresentacaoIni=&datApresentacaoFim=&idTipoAutor=&parteNomeAutor=",
"&siglaPartidoAutor=&siglaUFAutor=&generoAutor=&codEstado=&codOrgaoEstado=&emTramitacao=")
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
xml_data <- xmlToList(data)
xml_data[[3]]$tipoProposicao$sigla
for(i in 1:lenght(xml_data)){
df <- data.frame(
id=as.numeric(xml_data[[i]]$id),
nome=xml_data[[i]]$nome,
tipoProposicao=xml_data[[i]]$tipoProposicao$sigla,
numero=as.numeric(xml_data[[i]]$numero),
ano=xml_data[[i]]$ano,
orgaoNumerador=xml_data[[i]]$orgaoNumerador$nome,
datApresentacao=xml_data[[i]]$datApresentacao,
txtEmenta=xml_data[[i]]$txtEmenta,
txtExplicacaoEmenta=xml_data[[i]]$txtExplicacaoEmenta,
txtRegime=xml_data[[i]]$regime$txtRegime,
txtApreciacao=xml_data[[i]]$apreciacao$txtApreciacao,
qtdAutores=xml_data[[i]]$qtdAutores,
autor1=xml_data[[i]]$autor1$txtNomeAutor,
ultimoDespacho=xml_data[[i]]$ultimoDespacho$txtDespacho,
situacao=xml_data[[i]]$situacao$descricao,
proposicaoPrincipal=xml_data[[i]]$proposicao$nome
)
baseProjetos <- rbind(baseProjetos, df)
}
}
}
url
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
library(XML)
# tipo proposicoes
TIPOLEI <- c(
'MPV', 'MSC', 'MSF', 'MSG', 'OF.', 'P.C', 'PDC', 'PDF',
'PDL', 'PDN', 'PDR', 'PDS', 'PEC', 'PL.', 'PLD', 'PLN',
'PLP', 'PRC', 'PRN', 'QOD', 'RCP', 'REC', 'REP', 'REQ',
'VET'
)
baseProjetos <- NULL
for(ano in 1989:2017){
for(tipo in TIPOLEI){
url <-  paste0("http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarProposicoes?",
"sigla=",tipo,"&numero=&ano=",ano,
"&datApresentacaoIni=&datApresentacaoFim=&idTipoAutor=&parteNomeAutor=",
"&siglaPartidoAutor=&siglaUFAutor=&generoAutor=&codEstado=&codOrgaoEstado=&emTramitacao=")
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
xml_data <- xmlToList(data)
xml_data[[3]]$tipoProposicao$sigla
for(i in 1:lenght(xml_data)){
df <- data.frame(
id=as.numeric(xml_data[[i]]$id),
nome=xml_data[[i]]$nome,
tipoProposicao=xml_data[[i]]$tipoProposicao$sigla,
numero=as.numeric(xml_data[[i]]$numero),
ano=xml_data[[i]]$ano,
orgaoNumerador=xml_data[[i]]$orgaoNumerador$nome,
datApresentacao=xml_data[[i]]$datApresentacao,
txtEmenta=xml_data[[i]]$txtEmenta,
txtExplicacaoEmenta=xml_data[[i]]$txtExplicacaoEmenta,
txtRegime=xml_data[[i]]$regime$txtRegime,
txtApreciacao=xml_data[[i]]$apreciacao$txtApreciacao,
qtdAutores=xml_data[[i]]$qtdAutores,
autor1=xml_data[[i]]$autor1$txtNomeAutor,
ultimoDespacho=xml_data[[i]]$ultimoDespacho$txtDespacho,
situacao=xml_data[[i]]$situacao$descricao,
proposicaoPrincipal=xml_data[[i]]$proposicao$nome
)
baseProjetos <- rbind(baseProjetos, df)
}
}
}
library(XML)
# tipo proposicoes
TIPOLEI <- c(
'MPV', 'MSC', 'MSF', 'MSG', 'OF.', 'P.C', 'PDC', 'PDF',
'PDL', 'PDN', 'PDR', 'PDS', 'PEC', 'PL.', 'PLD', 'PLN',
'PLP', 'PRC', 'PRN', 'QOD', 'RCP', 'REC', 'REP', 'REQ',
'VET'
)
baseProjetos <- NULL
for(ano in 1989:2017){
for(tipo in TIPOLEI){
url <-  paste0("http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarProposicoes?",
"sigla=",tipo,"&numero=&ano=",ano,
"&datApresentacaoIni=&datApresentacaoFim=&idTipoAutor=&parteNomeAutor=",
"&siglaPartidoAutor=&siglaUFAutor=&generoAutor=&codEstado=&codOrgaoEstado=&emTramitacao=")
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
xml_data <- xmlToList(data)
for(i in 1:lenght(xml_data)){
df <- data.frame(
id=as.numeric(xml_data[[i]]$id),
nome=xml_data[[i]]$nome,
tipoProposicao=xml_data[[i]]$tipoProposicao$sigla,
numero=as.numeric(xml_data[[i]]$numero),
ano=xml_data[[i]]$ano,
orgaoNumerador=xml_data[[i]]$orgaoNumerador$nome,
datApresentacao=xml_data[[i]]$datApresentacao,
txtEmenta=xml_data[[i]]$txtEmenta,
txtExplicacaoEmenta=xml_data[[i]]$txtExplicacaoEmenta,
txtRegime=xml_data[[i]]$regime$txtRegime,
txtApreciacao=xml_data[[i]]$apreciacao$txtApreciacao,
qtdAutores=xml_data[[i]]$qtdAutores,
autor1=xml_data[[i]]$autor1$txtNomeAutor,
ultimoDespacho=xml_data[[i]]$ultimoDespacho$txtDespacho,
situacao=xml_data[[i]]$situacao$descricao,
proposicaoPrincipal=xml_data[[i]]$proposicao$nome
)
baseProjetos <- rbind(baseProjetos, df)
}
}
}
# tipo proposicoes
TIPOLEI <- c(
'MPV', 'MSC', 'MSF', 'MSG', 'OF.', 'P.C', 'PDC', 'PDF',
'PDL', 'PDN', 'PDR', 'PDS', 'PEC', 'PL.', 'PLD', 'PLN',
'PLP', 'PRC', 'PRN', 'QOD', 'RCP', 'REC', 'REP', 'REQ',
'VET'
)
baseProjetos <- NULL
for(ano in 1989:2017){
for(tipo in TIPOLEI){
url <-  paste0("http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarProposicoes?",
"sigla=",tipo,"&numero=&ano=",ano,
"&datApresentacaoIni=&datApresentacaoFim=&idTipoAutor=&parteNomeAutor=",
"&siglaPartidoAutor=&siglaUFAutor=&generoAutor=&codEstado=&codOrgaoEstado=&emTramitacao=")
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
xml_data <- xmlToList(data)
for(i in 1:length(xml_data)){
df <- data.frame(
id=as.numeric(xml_data[[i]]$id),
nome=xml_data[[i]]$nome,
tipoProposicao=xml_data[[i]]$tipoProposicao$sigla,
numero=as.numeric(xml_data[[i]]$numero),
ano=xml_data[[i]]$ano,
orgaoNumerador=xml_data[[i]]$orgaoNumerador$nome,
datApresentacao=xml_data[[i]]$datApresentacao,
txtEmenta=xml_data[[i]]$txtEmenta,
txtExplicacaoEmenta=xml_data[[i]]$txtExplicacaoEmenta,
txtRegime=xml_data[[i]]$regime$txtRegime,
txtApreciacao=xml_data[[i]]$apreciacao$txtApreciacao,
qtdAutores=xml_data[[i]]$qtdAutores,
autor1=xml_data[[i]]$autor1$txtNomeAutor,
ultimoDespacho=xml_data[[i]]$ultimoDespacho$txtDespacho,
situacao=xml_data[[i]]$situacao$descricao,
proposicaoPrincipal=xml_data[[i]]$proposicao$nome
)
baseProjetos <- rbind(baseProjetos, df)
}
}
}
url
i
xml_data[[i]]$id
xml_data[[i]]$descricao
xml_data[[i]]$erro$descricao
xml_data
xml_data[[1]]$descricao
xml_data$descricao
str(xml_data)
d <- xml_data
d
names(d)
names(d)[1]
names(d)[1] == 'descricao'
library(XML)
# tipo proposicoes
TIPOLEI <- c(
'MPV', 'MSC', 'MSF', 'MSG', 'OF.', 'P.C', 'PDC', 'PDF',
'PDL', 'PDN', 'PDR', 'PDS', 'PEC', 'PL.', 'PLD', 'PLN',
'PLP', 'PRC', 'PRN', 'QOD', 'RCP', 'REC', 'REP', 'REQ',
'VET'
)
baseProjetos <- NULL
for(ano in 1989:2017){
for(tipo in TIPOLEI){
url <-  paste0("http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarProposicoes?",
"sigla=",tipo,"&numero=&ano=",ano,
"&datApresentacaoIni=&datApresentacaoFim=&idTipoAutor=&parteNomeAutor=",
"&siglaPartidoAutor=&siglaUFAutor=&generoAutor=&codEstado=&codOrgaoEstado=&emTramitacao=")
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
xml_data <- xmlToList(data)
if(names(xml_data)[1] != 'descricao'){
for(i in 1:length(xml_data)){
df <- data.frame(
id=as.numeric(xml_data[[i]]$id),
nome=xml_data[[i]]$nome,
tipoProposicao=xml_data[[i]]$tipoProposicao$sigla,
numero=as.numeric(xml_data[[i]]$numero),
ano=xml_data[[i]]$ano,
orgaoNumerador=xml_data[[i]]$orgaoNumerador$nome,
datApresentacao=xml_data[[i]]$datApresentacao,
txtEmenta=xml_data[[i]]$txtEmenta,
txtExplicacaoEmenta=xml_data[[i]]$txtExplicacaoEmenta,
txtRegime=xml_data[[i]]$regime$txtRegime,
txtApreciacao=xml_data[[i]]$apreciacao$txtApreciacao,
qtdAutores=xml_data[[i]]$qtdAutores,
autor1=xml_data[[i]]$autor1$txtNomeAutor,
ultimoDespacho=xml_data[[i]]$ultimoDespacho$txtDespacho,
situacao=xml_data[[i]]$situacao$descricao,
proposicaoPrincipal=xml_data[[i]]$proposicao$nome
)
baseProjetos <- rbind(baseProjetos, df)
}
}
}
}
xml_data[[i]]$nome
xml_data[[i]]$id
as.numeric(xml_data[[i]]$id)
xml_data[[i]]$nome
xml_data[[i]]$tipoProposicao$sigla
as.numeric(xml_data[[i]]$numero)
xml_data[[i]]$ano
xml_data[[i]]$orgaoNumerador$nome
xml_data[[i]]$datApresentacao
xml_data[[i]]$txtEmenta
xml_data[[i]]$txtExplicacaoEmenta
xml_data[[i]]$regime$txtRegime
xml_data[[i]]$apreciacao$txtApreciacao
xml_data[[i]]$qtdAutores
xml_data[[i]]$autor1$txtNomeAutor
xml_data[[i]]$ultimoDespacho$txtDespacho
xml_data[[i]]$situacao$descricao
xml_data[[i]]$proposicao$nome
xml_data[[i]]$situacao$principal$proposicaoPrincipal
xml_data[[i]]$situacao$orgao$siglaOrgaoEstado
xml_data[[i]]$situacao$principal$proposicaoPrincipal
xml_data[[i]]$situacao$descricao
# tipo proposicoes
TIPOLEI <- c(
'MPV', 'MSC', 'MSF', 'MSG', 'OF.', 'P.C', 'PDC', 'PDF',
'PDL', 'PDN', 'PDR', 'PDS', 'PEC', 'PL.', 'PLD', 'PLN',
'PLP', 'PRC', 'PRN', 'QOD', 'RCP', 'REC', 'REP', 'REQ',
'VET'
)
baseProjetos <- NULL
for(ano in 1989:2017){
for(tipo in TIPOLEI){
url <-  paste0("http://www.camara.leg.br/SitCamaraWS/Proposicoes.asmx/ListarProposicoes?",
"sigla=",tipo,"&numero=&ano=",ano,
"&datApresentacaoIni=&datApresentacaoFim=&idTipoAutor=&parteNomeAutor=",
"&siglaPartidoAutor=&siglaUFAutor=&generoAutor=&codEstado=&codOrgaoEstado=&emTramitacao=")
data <- xmlParse(url, isURL=TRUE, asTree = TRUE, useInternalNodes = TRUE)
xml_data <- xmlToList(data)
if(names(xml_data)[1] != 'descricao'){
for(i in 1:length(xml_data)){
df <- data.frame(
id=as.numeric(xml_data[[i]]$id),
nome=xml_data[[i]]$nome,
tipoProposicao=xml_data[[i]]$tipoProposicao$sigla,
numero=as.numeric(xml_data[[i]]$numero),
ano=xml_data[[i]]$ano,
orgaoNumerador=xml_data[[i]]$orgaoNumerador$nome,
datApresentacao=xml_data[[i]]$datApresentacao,
txtEmenta=xml_data[[i]]$txtEmenta,
txtExplicacaoEmenta=xml_data[[i]]$txtExplicacaoEmenta,
txtRegime=xml_data[[i]]$regime$txtRegime,
txtApreciacao=xml_data[[i]]$apreciacao$txtApreciacao,
qtdAutores=xml_data[[i]]$qtdAutores,
autor1=xml_data[[i]]$autor1$txtNomeAutor,
ultimoDespacho=xml_data[[i]]$ultimoDespacho$txtDespacho,
situacao=xml_data[[i]]$situacao$descricao,
situacaoOrgao=xml_data[[i]]$situacao$orgao$siglaOrgaoEstado,
situacaoProposicaoPrincipal=xml_data[[i]]$situacao$principal$proposicaoPrincipal
)
baseProjetos <- rbind(baseProjetos, df)
}
}
}
}
setwd("F:/_Pesquisa/PosDoc/_Github/01_2017MarAbr")
18*56
